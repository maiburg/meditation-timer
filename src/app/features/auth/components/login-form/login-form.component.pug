StackLayout
  StackLayout.input-field.with-validation
    GridLayout.login-field-wrapper(columns='*, 25')
      TextField.login-field(#emailModel='ngModel', hint='Email', [(ngModel)]='email', col='0', required, email)
    StackLayout.login-field-validation-wrapper(*ngIf='emailModel.errors && emailModel.touched')
      Label.validation(*ngIf='emailModel.errors.required', text='email is missing')
      Label.validation(
        *ngIf='emailModel.errors.email && !emailModel.errors.required',
        text='the email is not in the correct format'
      )
  StackLayout.input-field.with-validation
    GridLayout.login-field-wrapper(columns='*, 25')
      TextField.login-field(
        #passwordModel='ngModel',
        hint='Password',
        [(ngModel)]='password',
        secure='true',
        col='0',
        required
      )
    StackLayout
      StackLayout(*ngIf='passwordModel.errors && passwordModel.touched')
        Label.validation(*ngIf='passwordModel.errors.required', text='password is required')
  Button.btn-login(
    [text]='"features.auth.pages.auth.login" | translate',
    (tap)='onLoginTap(emailModel.valid && passwordModel.valid)',
    [class.btn-outline]='!(emailModel.valid && passwordModel.valid)',
    [class.btn-primary]='emailModel.valid && passwordModel.valid',
    [isEnabled]='emailModel.valid && passwordModel.valid',
    [isUserInteractionEnabled]='emailModel.valid && passwordModel.valid'
  )
  Label.hr
